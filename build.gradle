plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.50"
    id "org.jetbrains.kotlin.kapt" version "1.3.50"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.50"
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id 'com.google.cloud.tools.jib' version '2.2.0'
    id "application"
}



version "0.1"
group "micronaut.bookman"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
    jcenter()
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    implementation "io.micronaut:micronaut-runtime"
    implementation "javax.annotation:javax.annotation-api"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"
    kapt platform("io.micronaut:micronaut-bom:$micronautVersion")
    kapt "io.micronaut:micronaut-inject-java"
    kapt "io.micronaut:micronaut-validation"
    kaptTest platform("io.micronaut:micronaut-bom:$micronautVersion")
    kaptTest "io.micronaut:micronaut-inject-java"
    runtimeOnly "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8"
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "io.micronaut.test:micronaut-test-kotlintest"
    testImplementation "io.mockk:mockk:1.9.3"
    testImplementation "io.kotlintest:kotlintest-runner-junit5:3.3.2"

    // Jackson
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-joda:2.9.5"

    // RDB
    implementation "io.micronaut.configuration:micronaut-jdbc-hikari:2.1.0"
    implementation 'mysql:mysql-connector-java:8.0.20'
    testImplementation 'com.h2database:h2:1.4.197'
    // RDB Migration
    implementation "io.micronaut.configuration:micronaut-flyway:1.2.0"
    // RDB DSL
    implementation 'org.jetbrains.exposed:exposed-core:0.23.1'
    implementation 'org.jetbrains.exposed:exposed-jdbc:0.23.1'
    implementation 'org.jetbrains.exposed:exposed-jodatime:0.23.1'
}

test.classpath += configurations.developmentOnly

mainClassName = "micronaut.bookman.Application"


test {
    useJUnitPlatform()
}

allOpen {
	annotation("io.micronaut.aop.Around")
}

compileKotlin {
	kotlinOptions {
	    jvmTarget = '1.8' 
	    //Will retain parameter names for Java reflection
	    javaParameters = true 
	}
}

compileTestKotlin {
	kotlinOptions {
	    jvmTarget = '1.8' 
	    javaParameters = true 
	}
}



shadowJar {
    mergeServiceFiles()
}

tasks.withType(JavaExec) {
    classpath += configurations.developmentOnly
    jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
}

